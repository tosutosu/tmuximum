#!/bin/sh

tmux_operation() {
  answer=$(tmux_operation_choices | fzf --ansi --select-1 --prompt="Tmux >")
  case $answer in
    #*new\ session* ) tmux new-session \; split-window -vp 23 ;;
    *new\ session* ) tmux new-session ;;
    *new\ window* ) tmux new-window ;;
    "kill sessions" ) tmux_kill_session ;;
    "kill windows" ) tmux_kill_window ;;
    *switch* ) tmux select-window -t $(echo "$answer" | awk '{print $4}' | sed "s/://g") ;;
    *attach* ) tmux attach -t $(echo "$answer" | awk '{print $4}' | sed 's/://') ;;
    *detach* ) tmux detach;;
  esac
}

tmux_operation_choices() {
  if [ -z $TMUX ]; then
    tmux list-sessions 2>/dev/null | while read line; do
      [[ ! "$line" =~ "attached" ]] || line="${GREEN}$line${C_END}"
      echo "${GREEN}attach${C_END} ==> [ "$line" ]"
    done
    echo "${GREEN}create${C_END} ==> [ ${GREEN}new session${C_END} ]"
  else
    tmux list-windows | sed "/active/d" | while read line; do
      echo  "${CYAN}switch${C_END} ==> [ $(echo $line | awk '{print $1 " " $2 " " $3 " " $4 " " $5}') ]"
    done
    echo  "${CYAN}switch${C_END} ==> [ new window ]"
    echo "${YELLOW}detach${C_END}"
    echo "${RED}kill${C_END} windows"
  fi
  tmux has-session 2>/dev/null && echo "${RED}kill${C_END} sessions"
}

tmux_kill_session() {
  answer=$(tmux_kill_session_choices | fzf --ansi --prompt="Tmux >")
  case $answer in
    *kill*Server* ) tmux kill-server ; tmux_operation ;;
    *kill*windows* ) tmux kill-session -t $(echo "$answer" | awk '{print $4}' | sed "s/://g")
      if $(tmux has-session 2>/dev/null); then
        tmux_kill_session
      fi
    ;;
  esac
}

tmux_kill_session_choices() {
  list_sessions=$(tmux list-sessions 2>/dev/null);
  echo "$list_sessions" | while read line; do
    [[ "$line" =~ "attached" ]] && line="${GREEN}"$line"${C_END}"
    echo  "${RED}kill${C_END} ==> [ "$line" ]"
  done
  [ $(echo "$list_sessions" | grep -c '')  = 1 ] || echo "${RED}kill${C_END} ==> [ ${RED}Server${C_END} ]"
}

tmux_kill_window() {
  answer=$(tmux_kill_window_choices | fzf --ansi --prompt="Tmux >")
  if [[ "$answer" =~ "kill" ]]; then
    tmux kill-window -t $(echo "$answer" | awk '{print $4}' | sed "s/://g")
    tmux_kill_window
  fi
}

tmux_kill_window_choices() {
  tmux list-windows | while read line; do
    line="$(echo $line | awk '{print $1 " " $2 " " $3 " " $4 " " $5 " " $9}')"
    [[ $line =~ "active" ]] && line="${GRENN}$line${C_END}"
    echo " ${RED}kill${C_END} ==> [ $line ]"
  done
}

set_color() {
  readonly BLACK="\033[30m"
  readonly RED="\033[31m"
  readonly GREEN="\033[32m"
  readonly YELLOW="\033[33m"
  readonly BLUE="\033[34m"
  readonly MAGENTA="\033[35m"
  readonly CYAN="\033[36m"
  readonly WHITE="\033[37m"

  readonly C_END="\033[m"
}

set_color

if type fzf >/dev/null 2>&1 ; then
  tmux_operation
else
  echo "tmuximum: Required \"fzf\""
fi
